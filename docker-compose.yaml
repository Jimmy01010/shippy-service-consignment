version: '3.5'

services:
  # Services
  consignment:
    restart: always
    build: ./consignment-service  #  shippy-service-consignment
    depends_on:
      - datastore
      - vessel
    ports:
      - "50051:50051"
    environment:
      MICRO_REGISTRY: "mdns"
      MICRO_SERVER_ADDRESS: ":50051"
      # We use datastore as the host name here instead of localHost
      # because Docker has a powerful DNS mechanism built in.(http://dockone.io/article/2316)
      DB_HOST: "mongodb://datastore:27017"

  vessel:
    restart: always
    build: ./vessel-service  # shippy-service-vessel
    ports:
      - "50052:50051"
    environment:
      MICRO_REGISTRY: "mdns"
      MICRO_SERVER_ADDRESS: ":50051"
      DB_HOST: "mongodb://datastore:27017"

  # Commands
  cli:
    build: ./consignment-cli  # shippy-cli-consignment
    environment:
      MICRO_REGISTRY: "mdns"
    depends_on:
      - consignment

  user:
    build: ./shippy-user-service
    ports:
      - "50053:50051"
    environment:
      MICRO_ADDRESS: ":50051"
      DB_HOST: "database"
      DB_USER: "admin"
      DB_PASSWORD: "password"
      DB_NAME: "postgres"
    depends_on:
        - database


  user-cli:
    build: ./shippy-cli-user
    depends_on:
      - user


  # Database tier
  datastore:
    image: mongo
    container_name: "datastore"
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null
    volumes:
      - ./data/db:/data/db # ensures data persistence between restarting
    ports:
      - "27017"
    command: mongod --logpath=/dev/null

  database:
    image: postgres:alpine
    environment:
      POSTGRES_PASSWORD: "password"
      POSTGRES_USER: "admin"
    ports:
      - "5432:5432"

networks: # Set up a custom network (default bridge mode). so that local containers can communicate with each other
  default:  # docker network create docker_compose_network --subnet 172.20.1.0/24ls
    external:
      name: docker_compose_network


